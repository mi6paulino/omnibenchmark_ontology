@prefix : <http://omnibenchmark.org/ns#>  .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix omni: <http://omnibenchmark.org/ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix prov: <http://www.w3.org/ns/prov#> .

omni:Benchmark a rdfs:Class ;
    rdfs:label "Benchmark" ;
    rdfs:comment "A specific benchmarking process in the context of the Omnibenchmark project." .

omni:Module a rdfs:Class ;
    rdfs:label "Module" ;
    rdfs:comment "A git (perhaps GitLab) repository the benchmarking process happens at." .

# benchmark-related
# perhaps define Deliverable a subclass of prov:Entity?
omni:Deliverable a rdfs:Class ;
    rdfs:label "Deliverable" ;
    rdfs:comment "A traceable file generated during the omnibenchmarking benchmarking process" .
    
# tests this
# https://schema.org/StructuredValue
omni:NamedParameter a rdfs:Class ;
    rdfs:subClassOf <https://schema.org/StructuredValue> ;
    rdfs:label "NamedParameter" ;
    rdfs:comment "A parameter tuple with identifier and value." .

omni:ComputationalEnvironment a rdfs:Class ;
    rdfs:label "ComputationalEnvironment" ;
    rdfs:comment "Details of the host running the benchmark." .

# properties

omni:name a rdfs:Property ;
    rdfs:label "name" ;
    rdfs:comment "The name of the benchmark." ;
    rdfs:domain omni:Benchmark ;
    rdfs:range xsd:string .
    
    
# run-related

# omni:BenchmarkRun a rdfs:Class ;
#     rdfs:label "BenchmarkRun" ;
#     rdfs:comment "A specific run of a benchmark method/metric/dataset/else during a certain epoch." ;
#     rdfs:subClassOf prov:Activity .

# omni:belongsTo a rdfs:Property ;
#     rdfs:label "belongsTo" ;
#     rdfs:comment "Links a BenchmarkRun to its parent Benchmark." ;
#     rdfs:domain omni:BenchmarkRun ;
#     rdfs:range omni:Benchmark .

omni:benchark a rdfs:Property ;
    rdfs:label "benchmark" ;
    rdfs:comment "Links a benchmarking module to its benchmark." ;
    rdfs:domain omni:Module ;
    rdfs:range omni:Benchmark .

omni:keyword a rdfs:Property ;
    rdfs:label "keyword" ;
    rdfs:comment "Links a benchmarking module to its keywords." ;
    rdfs:domain omni:Module ;
    rdfs:range xsd:string .

omni:inputKeyword a rdfs:Property ;
    rdfs:label "inputKeyword" ;
    rdfs:comment "The input keyword(s), as defined by the config.yaml." ;
    rdfs:domain omni:Module ;
    rdfs:range xsd:string .

omni:parameterKeyword a rdfs:Property ;
    rdfs:label "parameterKeyword" ;
    rdfs:comment "The parameter keyword(s), as defined by the config.yaml." ;
    rdfs:domain omni:Module ;
    rdfs:range xsd:string .
    
omni:ciCdStage a rdfs:Property ;
    rdfs:label "ciCdStage" ;
    rdfs:comment "Links a benchmarking module to its benchmarking stage (orchestrator-wise)." ;
    rdfs:domain omni:Module ;
    rdfs:range xsd:string .

# deliverables-related; some of them overlap renku's

omni:epoch a rdfs:Property ;
    rdfs:label "epoch" ;
    rdfs:comment "Deliverable's epoch." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:integer .

# Git LFS storage is content addressable: content is stored against a key which is a SHA-256 hash of the content itself
omni:lfsHash a rdfs:Property ;
    rdfs:label "lfsHash" ;
    rdfs:comment "Deliverable's GitLFS hash/id." ;    
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:string .    

omni:module a rdfs:Property ;
    rdfs:label "module" ;
    rdfs:comment "Deliverable's module." ;    
    rdfs:domain omni:Deliverable ;
    rdfs:range omni:Module .
    
# overlaps renku ont
omni:plan a rdfs:Property ;
    rdfs:label "plan" ;
    rdfs:comment "Links a Deliverable to it's generating plan." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:string .

# overlaps renku ont
omni:activity a rdfs:Property ;
    rdfs:label "activity" ;
    rdfs:comment "Links a Deliverable to its generating activity." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:string .

# sort of overlaps renku ont, but only for composite plans
omni:namedParameter a rdfs:Property ;
    rdfs:label "namedParam" ;
    rdfs:comment "Links a Deliverable to its (named) parameters." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range omni:NamedParameter .

omni:dockerImage a rdfs:Property ;
    rdfs:label "dockerImage" ;
    rdfs:comment "Links a Deliverable to its generating Docker Image." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:string .

omni:inputPath a rdfs:Property ;
    rdfs:label "inputPath" ;
    rdfs:comment "Links a Deliverable to its (input) deliverable (path)." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:string .

omni:computationalEnvironment a rdfs:Property ;
    rdfs:label "computationalEnvironment" ;
    rdfs:comment "Links a Deliverable to its computing environment." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range omni:ComputationalEnvironment .

omni:command a rdfs:Property ;
    rdfs:label "command" ;
    rdfs:comment "Full command leading to the generation of a Deliverable." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:string .

## before or after creating the deliverable?
omni:preCommit a rdfs:Property ;
    rdfs:label "preCommit" ;
    rdfs:comment "Repo commit (HEAD) before triggering the Deliverable generation." ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:string .

omni:exitStatus a rdfs:Property ;
    rdfs:label "exitStatus" ;
    rdfs:comment "For a given deliverable, activity (generating) script exit status" ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:int .

# likely overlapping renku's ontology
omni:isInvalidated a rdfs:Property ;
    rdfs:label "isInvalidated" ;
    rdfs:comment "Is the deliverable invalidated?" ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:boolean .
    
# for epoch/tagging, has the git history been rebased (squashed)?
omni:isRebased a rdfs:Property ;
    rdfs:label "isRebased" ;
    rdfs:comment "During the plan(activities) exec: has the git history being rebased/squashed?" ;
    rdfs:domain omni:Deliverable ;
    rdfs:range xsd:boolean .

omni:fileName a rdfs:Property ;
    rdfs:label "fileName" ;
    rdfs:comment "File name (generated deliverable)." ;
    rdfs:domain omni:Deliverable ;    
    rdfs:range xsd:string .
    
